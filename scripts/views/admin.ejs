<!DOCTYPE html>
<html lang="en">
    <%- include('./partials/dashboard.ejs') %>

        <section id="right">
            <div style="display:flex;width:30%;flex-wrap:wrap;border-right:1px solid #aaa;">
                <aside id="asideL">
                    <h2>Create Arm</h2>
                    <form action="/json/arm/write/create" method="post" id="mkArms" class="form">
                        <input type="text" name="arms" id="newArms" placeholder="Name of arm" autocomplete="off" required>
                        <button type="submit" id="createBtn">Create</button>
                    </form>
                </aside>
                <aside id="asideR">
                    <h2>Delete Arm</h2>
                    <form action="/json/arm/write/delete" method="post" id="delArms" class="form">
                        <button type="submit" id="deleteBtn">Delete</button>
                    </form>
                </aside>
            </div>
            <div id="container" style="display: none;padding: 0 100px;flex: 5;">
                <%- include('./teachers.ejs') %>
            </div>
        </section>
    </div>
    <span id="span-settings-svg">
        <svg xmlns="http://www.w3.org/2000/svg" width="70px" height="70px" viewBox="0 0 48 48" class="settings-svg" data-name="Layer 2"><defs><style>.cls-1{fill:#fff;stroke-linecap:round;stroke-linejoin:round;}</style></defs><path class="cls-1" d="M39.23,26a16.52,16.52,0,0,0,.14-2,16.52,16.52,0,0,0-.14-2l4.33-3.39a1,1,0,0,0,.25-1.31l-4.1-7.11a1,1,0,0,0-1.25-.44l-5.11,2.06a15.68,15.68,0,0,0-3.46-2l-.77-5.43a1,1,0,0,0-1-.86H19.9a1,1,0,0,0-1,.86l-.77,5.43a15.36,15.36,0,0,0-3.46,2L9.54,9.75a1,1,0,0,0-1.25.44L4.19,17.3a1,1,0,0,0,.25,1.31L8.76,22a16.66,16.66,0,0,0-.14,2,16.52,16.52,0,0,0,.14,2L4.44,29.39a1,1,0,0,0-.25,1.31l4.1,7.11a1,1,0,0,0,1.25.44l5.11-2.06a15.68,15.68,0,0,0,3.46,2l.77,5.43a1,1,0,0,0,1,.86h8.2a1,1,0,0,0,1-.86l.77-5.43a15.36,15.36,0,0,0,3.46-2l5.11,2.06a1,1,0,0,0,1.25-.44l4.1-7.11a1,1,0,0,0-.25-1.31ZM24,31.18A7.18,7.18,0,1,1,31.17,24,7.17,7.17,0,0,1,24,31.18Z"/></svg>
    </span>
    <script>
        fetch('/json/arm/read')
        .then(res => res.json())
        .then(data => {
            window.sessionStorage.setItem('armStore', JSON.stringify(data));

            const selectArms = document.getElementById('delArms');
            
            for(arm of data) {
                let checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.name = 'arms';
                checkbox.value = arm;
                checkbox.id = arm;

                let label = document.createElement('label');
                label.htmlFor = arm;
                label.appendChild(document.createTextNode(arm));

                let myDiv = document.createElement('div');

                myDiv.appendChild(checkbox);
                myDiv.appendChild(label);

                selectArms.insertBefore(myDiv, document.querySelector('#deleteBtn'));
            }
        })

        // document.querySelector('#deleteBtn').onclick = () => {

        // }
        document.querySelectorAll('.form').forEach(form => {
            form.addEventListener('submit', (e) => {
                document.querySelector('#span-settings-svg').style.display = 'flex';
            })
        })
        
    </script>
    <script>
        /*
        document.addEventListener('DOMContentLoaded', fetchClassrooms)

        function fetchClassrooms(){
            fetch('/find/classrooms', {
                method: 'GET'
            })
            .then(result => {
                console.log(result)
            })
        }*/
        
        var allDocs = [];

        document.querySelector('#JS1').addEventListener('click', main('JS1'));
        //document.getElementById('JS2').addEventListener('click', main('JS2'));
        
        function main(para) {
            //MAKE array DYNAMIC
            
            new Promise((resolve, reject) => {
                const array = [
                    fetch(`/find/classrooms/${para}/${document.querySelectorAll(`.${para}`)[0].value}`),
                    fetch(`/find/classrooms/${para}/${document.getElementsByClassName(`${para}`)[1].value}`),
                ]
    
                Promise.all(array)
                .then((res) => {
                    Promise.all(res.map((item) => {
                        return item.json()
                    }))
                    .then(data => {
                        data.forEach((val, index) => {
                            //document.querySelectorAll(`.${para}`)[index].addEventListener('click', myIndexedDB(val))
                            allDocs.push(val)
                            //document.getElementById('container').innerHTML += val[0];
                            //console.log(val[0]);
                            document.getElementsByClassName(`${para}`)[index].children[0].textContent = val.length;
                        })
                    })
                })
                .catch(e => {
                    console.log("Multiple fetch failed.")
                })
            })
        }
/*
        document.querySelectorAll('.JS1').forEach(async (item, index) => {
            await myIndexedDB(allDocs[index])
        })

        function myIndexedDB(i){
            document.getElementById('container').innerHTML += i + '\n\n';
        } */

        //self-called function
    </script>
    
</body>
</html>